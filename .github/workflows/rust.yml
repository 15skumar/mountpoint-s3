name: Rust Tests

on:
  push:
  pull_request:
    branches: [ "main" ]

env:
  RUSTFLAGS: -Dwarnings
  RUST_BACKTRACE: 1
  CARGO_TERM_COLOR: always
  S3_BUCKET_NAME: s3-file-connector-github-test-bucket
  S3_BUCKET_TEST_PREFIX: github-actions-tmp/run-${{ github.run_id }}/attempt-${{ github.run_attempt }}
  S3_REGION: us-east-1
  RUST_FEATURES: fuse_tests,s3_tests

jobs:
  test:
    name: Tests
    runs-on: ubuntu-22.04

    permissions:
      id-token: write
      contents: read

    steps:
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        role-to-assume: arn:aws:iam::360461222476:role/GitHub-Actions-Role
        aws-region: us-east-1
    # Lifecycle on the bucket cleans these objects up for us
    - name: Put test object
      run: |
        TMP=$(mktemp)
        echo "Test object to check bucket exists" > $TMP
        aws s3api put-object --bucket $S3_BUCKET_NAME --key $S3_BUCKET_TEST_PREFIX/test --body $TMP
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        submodules: true
    - name: Install fuse
      run: sudo apt-get install fuse libfuse2 libfuse-dev
    - name: Configure fuse
      run: echo 'user_allow_other' | sudo tee -a /etc/fuse.conf
    - name: Check all targets
      run: cargo check --all-targets --features $RUST_FEATURES
    - name: Run tests
      run: cargo test --features $RUST_FEATURES

  rustfmt:
    name: rustfmt
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Install rustfmt
        run: rustup component add rustfmt
      - name: Check format
        run: make fmt-check

  clippy:
    name: Clippy
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          submodules: true
      - name: Install fuse
        run: sudo apt-get install fuse libfuse2 libfuse-dev
      - name: Run Clippy
        run: make clippy

  docs:
    name: CRT Documentation
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          submodules: true
      - name: Build CRT binding documentation
        run: cargo doc --no-deps -p aws-crt-s3

  deny:
    name: Deny
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Run cargo deny
        uses: EmbarkStudios/cargo-deny-action@v1
